#ifndef _PUBLISHER_CALLBACK_
#define _PUBLISHER_CALLBACK_

#include<iostream>
#include
//////////////////////////////////////////////////////////////////////////////////////////
/**
 * A callback class for use with the main MQTT client.
 */
class ably_subscriber_callback : public virtual mqtt::callback
{
public:
  void connection_lost(const std::string& cause) override {
    std::cout << "\nConnection lost" << std::endl;
    if (!cause.empty())
      std::cout << "\tcause: " << cause << std::endl;
  }

  void delivery_complete(mqtt::delivery_token_ptr tok) override {
    std::cout << "\tDelivery complete for token: "
	      << (tok ? tok->get_message_id() : -1) << std::endl;
  }
};
#endif
